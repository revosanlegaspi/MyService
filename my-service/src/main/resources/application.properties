spring.application.name=MyService

# Server Port
server.port=8080

# H2 Database Configuration (for development)
spring.datasource.url=jdbc:postgresql://localhost:5432/mydb
spring.datasource.username=mydb_admin
spring.datasource.password=admin
spring.datasource.driverClassName=org.postgresql.Driver

# Hibernate/JPA Configuration
# ddl-auto:
#   - create: Drops existing tables, creates new ones on startup. (Use for testing/dev only)
#   - create-drop: Creates schema on startup, drops on shutdown. (Use for testing/dev only)
#   - update: Updates the schema, doesn't drop existing tables. (Use with caution in dev, not recommended for production)
#   - validate: Validates the schema, makes no changes.
#   - none: Disables DDL handling. (Recommended for production, use external migration tools like Flyway/Liquibase)
# For development convenience. Use 'none' for production with migration scripts
spring.jpa.hibernate.ddl-auto=update

# Shows SQL queries in console
spring.jpa.show-sql=true
# Formats SQL queries for readability
spring.jpa.properties.hibernate.format_sql=true

# H2 Console (for development)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# --- Production Database Configuration Examples (uncomment and modify as needed) ---
# H2 Database Configuration (for development)
# spring.datasource.url=jdbc:h2:mem:mydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=

# MySQL Configuration:
# spring.datasource.url=jdbc:mysql://localhost:3306/mydatabase?useSSL=false&serverTimezone=UTC
# spring.datasource.username=your_mysql_user
# spring.datasource.password=your_mysql_password
# spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

# PostgreSQL Configuration:
# spring.datasource.url=jdbc:postgresql://localhost:5432/mydb
# spring.datasource.username=mydb_admin
# spring.datasource.password=admin
# spring.datasource.driverClassName=org.postgresql.Driver

# Jpa dialect (Important for specific database features and optimizations)
# For H2:
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# For MySQL:
# spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
# For PostgreSQL:
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Springdoc OpenAPI / Swagger UI configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs